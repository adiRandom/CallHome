apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    android {
        packagingOptions {
            exclude 'META-INF/DEPENDENCIES'
            exclude 'META-INF/LICENSE'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/license.txt'
            exclude 'META-INF/NOTICE'
            exclude 'META-INF/NOTICE.txt'
            exclude 'META-INF/notice.txt'
            exclude 'META-INF/ASL2.0'
            exclude 'META-INF/AL2.0'
            exclude 'META-INF/LGPL2.1'
            exclude("META-INF/*.kotlin_module")
            exclude 'win32-x86-64/attach_hotspot_windows.dll'
            exclude 'win32-x86/attach_hotspot_windows.dll'
            exclude 'META-INF/licenses/ASM'
        }
        buildFeatures {
            dataBinding true
            viewBinding true
        }
    }

        compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    defaultConfig {
        applicationId "com.adi_random.callhome"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 9
        versionName "1.2.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    testOptions{
        unitTests.includeAndroidResources = true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.3.0-alpha02'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'com.google.android.material:material:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.test.ext:junit:1.1.1'



    def room_version = '2.2.5'
    def retrofit_version = '2.9.0'

    /*Kotlin*/
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.0"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.0"


    /*Kotlin Android Coroutines*/
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7"

    /*Retrofit*/
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    /*ViewModel*/
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    kapt "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.0-alpha07'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0-alpha07'

    /* room */
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    /*Dagger 2*/
    implementation 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.27'
    //for test
    kaptAndroidTest 'com.google.dagger:dagger-compiler:2.27'

    // orchestrator
    def orchestrator_version = "1.2.0"
    androidTestUtil "androidx.test:orchestrator:$orchestrator_version"

    // Kotlin test
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    // Espresso
    def androidx_espresso_core = "3.2.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidx_espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidx_espresso_core"

    def androidx_espresso_idling_resource = "3.2.0"
    testImplementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"
    implementation "androidx.test.espresso:espresso-idling-resource:$androidx_espresso_idling_resource"


    // androidx.test
    def androidx_test_runner = "1.3.0"
    androidTestImplementation "androidx.test:runner:$androidx_test_runner"
    androidTestImplementation "androidx.test:rules:$androidx_test_runner"

    def androidx_test_core = "1.3.0"
    androidTestImplementation "androidx.test:core-ktx:$androidx_test_core"


    def androidx_test_ext = "1.1.1"
    testImplementation "androidx.test.ext:junit-ktx:$androidx_test_ext"

    // androidx.fragment
    def fragment_version = "1.3.0-alpha08"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"


    // Dependencies for local unit tests
    androidTestImplementation'org.hamcrest:hamcrest-library:1.3'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.robolectric:robolectric:4.3.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.9"
    //   Cron utils
    implementation "com.cronutils:cron-utils:9.1.0"

    def work_version = "2.4.0"
// Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"
    // optional - GCMNetworkManager support
    implementation "androidx.work:work-gcm:$work_version"

    // optional - Test helpers
    androidTestImplementation "androidx.work:work-testing:$work_version"

    implementation 'com.google.android.material:material:1.2.0'
    androidTestImplementation 'org.mockito:mockito-core:2.19.0'
    androidTestImplementation 'org.mockito:mockito-android:3.5.6'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
}